package bos.customer;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2019-05-25T11:40:36.523+08:00
 * Generated source version: 2.4.2
 * 
 */
@WebService(targetNamespace = "http://service.customer.com/", name = "ICustomerService")
@XmlSeeAlso({})
public interface ICustomerService {

    @RequestWrapper(localName = "noassigncustomerstodecidedzone", targetNamespace = "http://service.customer.com/", className = "com.customer.Noassigncustomerstodecidedzone")
    @WebMethod
    @ResponseWrapper(localName = "noassigncustomerstodecidedzoneResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.NoassigncustomerstodecidedzoneResponse")
    public void noassigncustomerstodecidedzone(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0
    );

    @RequestWrapper(localName = "assigncustomerstodecidedzone", targetNamespace = "http://service.customer.com/", className = "com.customer.Assigncustomerstodecidedzone")
    @WebMethod
    @ResponseWrapper(localName = "assigncustomerstodecidedzoneResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.AssigncustomerstodecidedzoneResponse")
    public void assigncustomerstodecidedzone(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    java.util.List<Integer> arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.customer.com/", className = "com.customer.FindAll")
    @WebMethod
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.FindAllResponse")
    public java.util.List<Customer> findAll();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findListHasAssociation", targetNamespace = "http://service.customer.com/", className = "com.customer.FindListHasAssociation")
    @WebMethod
    @ResponseWrapper(localName = "findListHasAssociationResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.FindListHasAssociationResponse")
    public java.util.List<Customer> findListHasAssociation(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findCustomerByTelephone", targetNamespace = "http://service.customer.com/", className = "com.customer.FindCustomerByTelephone")
    @WebMethod
    @ResponseWrapper(localName = "findCustomerByTelephoneResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.FindCustomerByTelephoneResponse")
    public Customer findCustomerByTelephone(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findListNotAssociation", targetNamespace = "http://service.customer.com/", className = "com.customer.FindListNotAssociation")
    @WebMethod
    @ResponseWrapper(localName = "findListNotAssociationResponse", targetNamespace = "http://service.customer.com/", className = "com.customer.FindListNotAssociationResponse")
    public java.util.List<Customer> findListNotAssociation();
}
